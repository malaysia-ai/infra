# Refer helm values here. Make sure use matching version ye
# https://github.com/argoproj/argo-helm/blob/argo-cd-5.51.6/charts/argo-cd/values.yaml
global:
  affinity:
    nodeAffinity:
      matchExpressions:
        - key: devops
          operator: In
          values: ["owned"]
dex:
  enabled: true

server:
  extraArgs:
    # - --insecure
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      nginx.org/client-max-body-size: 10M
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    hosts:
      - argocd.us.malaysia-ai.org
    paths:
      - /
configs:
  cm:
    kustomize.buildOptions: --enable-helm
    url: https://argocd.us.malaysia-ai.org
    # admin.enabled: false
    resource.customizations.actions.apps_Deployment: |
      discovery.lua: |
        actions = {}
        actions["restart"] = {}
        actions["turnOn"] = {["disabled"] = true}
        actions["turnOff"] = {["disabled"] = true}

        local replicas
        if obj.spec.replicas ~= nil then
            replicas = obj.spec.replicas
        end
        if replicas ~= 0 then
          actions["turnOff"]["disabled"] = false
        else
          actions["turnOn"]["disabled"] = false
        end
        return actions
      definitions:
        - name: turnOn
          action.lua: |
            obj.spec.replicas = 1
            return obj
        - name: turnOff
          action.lua: |
            obj.spec.replicas = 0
            return obj
        - name: restart
          action.lua: |
            local os = require("os")
            if obj.spec.template.metadata == nil then
              obj.spec.template.metadata = {}
            end
            if obj.spec.template.metadata.annotations == nil then
              obj.spec.template.metadata.annotations = {}
            end
            obj.spec.template.metadata.annotations["kubectl.kubernetes.io/restartedAt"] = os.date("!%Y-%m-%dT%XZ")
            return obj
    resource.customizations.actions.batch_CronJob: |
      discovery.lua: |
        actions = {}
        actions["suspend"] = {["disabled"] = true}
        actions["resume"] = {["disabled"] = true}

        local suspend = false
        if obj.spec.suspend ~= nil then
            suspend = obj.spec.suspend
        end
        if suspend then
            actions["resume"]["disabled"] = false
        else
            actions["suspend"]["disabled"] = false
        end
        return actions
      definitions:
      - name: suspend
        action.lua: |
          obj.spec.suspend = true
          return obj
      - name: resume
        action.lua: |
          if obj.spec.suspend ~= nil and obj.spec.suspend then
              obj.spec.suspend = false
          end
          return obj
    # dex.config: |-
    #   logger:
    #     level: debug
    #     format: json
    #   connectors:
    #   - type: saml
    #     name: IAM Identity Center
    #     id: iam-identity-center
    #     config:
    #       ssoURL: https://portal.sso.us-east-1.amazonaws.com/saml/assertion/ODk2MjgwMDM0ODI5X2lucy0wOTlhYTRkMzI0NTRlODUw
    #       logoutURL: https://portal.sso.us-east-1.amazonaws.com/saml/logout/ODk2MjgwMDM0ODI5X2lucy0wOTlhYTRkMzI0NTRlODUw
    #       entityIssuer: https://argocd.us.malaysia-ai.org/api/dex/callback
    #       redirectURI: https://argocd.us.malaysia-ai.org/api/dex/callback
    #       usernameAttr: email
    #       emailAttr: email
    #       groupsAttr: group
    #       caData: |-
    #         LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lFRjAreU16QU5CZ2txaGtpRzl3MEJBUXNGQURCRk1SWXdGQVlEVlFRRERBMWgKYldGNmIyNWhkM011WTI5dE1RMHdDd1lEVlFRTERBUkpSRUZUTVE4d0RRWURWUVFLREFaQmJXRjZiMjR4Q3pBSgpCZ05WQkFZVEFsVlRNQjRYRFRJME1ERXhPREF5TlRVMU0xb1hEVEk1TURFeE9EQXlOVFUxTTFvd1JURVdNQlFHCkExVUVBd3dOWVcxaGVtOXVZWGR6TG1OdmJURU5NQXNHQTFVRUN3d0VTVVJCVXpFUE1BMEdBMVVFQ2d3R1FXMWgKZW05dU1Rc3dDUVlEVlFRR0V3SlZVekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQgpBTUswVVcvK0xhNktKQk5kYnkxeEI5aWdSaTRDcC9OdEtVYjlBa2RoWDdkSE5NOGF5NmdSUlNkRi9YdHdvd0JLCld1c25sTnpyeUQ2RnFCR0FJOW1jVmNHZU5sNCs3V1d0NGpxU0VpWk14UCt0YlR5U1VWeXpkcEUrSTZmcmNUcXMKdm5JVUlQcmJ4T2JiTFZoektXam9zeFFQNTFYQzJvcmwzaC9OSDE0RlJySjk2RWRQb1pSbDR2T0ppSllEZGdKdQpQRTg1Ky92MXgrR2NPUjNJVXZvTzFEMzZKTTVoL0xGa1ZZY2FDZzAwSk53NllkMXJkNXRXeHpTVTFxLzZjRjNqCmpIbmJ3VjhKQm82eEloeWRUWWhFQmd2YjlSUTVjQzBCVkhUdGFWU1FiemJlVFBsdnIzN1V5OGs0N3V1dXdzRHEKZEd0aFhlS3hFekVDOFlaUzBPUGFXVWtDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFaVzNPeEg4NgoySllMbU8vL2tlYTBkOGk1NmpaL0Evc3I2VjE2NUpQSUF3VDI4V2ZmUTRqcHdMektrUE5Gc1VQWXk0WnpqWGxtClV4MzVyWWZiaTNnbXJ0TzIvOXROVzlrbktJUFNhOVdVZ0lBYS9ueDlpUGlKYlI2QWhzOHJGZS8rRmtxREQ3OTkKRmNJVnYzRUNSZjVEWGYxd0ttdUdNQ0R2cm9acEhOeE5DNWpYZitVR1JSTERjOGg0dE9IaVNZSXdBZmZadHB1WgpRMjhPaU1NdHBjS2MreEROV0Z0RHZCWVlsbnF3c0M3ZjJDQ0hUSGJPR0NQYUY5WCtxaWNubVFOeEVHV20vWGMxClNYbzB1RWJIZ0haUXRpN01PaTJxWnMydWhNeWYxUU1Xc3UySVZLeGhmQ2sxUG1pTVE4NGVCM3RZeDJXdmlaNmMKaGNDN2FRMnlJTFZIanc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  rbac:
    policy.csv: |
      p, role:readonly, applications, get, */*, allow
      p, role:readonly, certificates, get, *, allow
      p, role:readonly, clusters, get, *, allow
      p, role:readonly, repositories, get, *, allow
      p, role:readonly, projects, get, *, allow
      p, role:readonly, accounts, get, *, allow
      p, role:readonly, gpgkeys, get, *, allow

      p, role:dev, applications, get, *, allow
      p, role:dev, applications, action//Deployment/on, default/devserver, allow
      p, role:dev, applications, action//Deployment/off, default/devserver, allow

      p, role:admin, applications, create, */*, allow
      p, role:admin, applications, update, */*, allow
      p, role:admin, applications, delete, */*, allow
      p, role:admin, applications, sync, */*, allow
      p, role:admin, applications, override, */*, allow
      p, role:admin, applications, action/*, */*, allow
      p, role:admin, certificates, create, *, allow
      p, role:admin, certificates, update, *, allow
      p, role:admin, certificates, delete, *, allow
      p, role:admin, clusters, create, *, allow
      p, role:admin, clusters, update, *, allow
      p, role:admin, clusters, delete, *, allow
      p, role:admin, repositories, create, *, allow
      p, role:admin, repositories, update, *, allow
      p, role:admin, repositories, delete, *, allow
      p, role:admin, projects, create, *, allow
      p, role:admin, projects, update, *, allow
      p, role:admin, projects, delete, *, allow
      p, role:admin, accounts, update, *, allow
      p, role:admin, gpgkeys, create, *, allow
      p, role:admin, gpgkeys, delete, *, allow

      g, argocd-readonly, role:readonly
      g, argocd-admin, role:admin
    policy.default: role:readonly
    scopes: '[groups]'
  # credentialTemplates:
  #   ssh-creds:
  #     url: git@github.com:malaysia-ai
  #     sshPrivateKey: |
  #       ${ssh_key}
  repositories:
    private-repo:
      url: git@github.com:malaysia-ai/IaC.git
    docker-registry:
      url: registry-1.docker.io
      username: "docker"
      password: ""
      name: docker-registry
      enableOCI: "true"
      type: "helm"