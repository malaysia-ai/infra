# Refer helm values here. Make sure use matching version ye
# https://github.com/argoproj/argo-helm/blob/argo-cd-5.51.6/charts/argo-cd/values.yaml
global:
  affinity:
    nodeAffinity:
      matchExpressions:
        - key: devops
          operator: In
          values: ["owned"]
dex:
  enabled: true

server:
  extraArgs:
    # - --insecure
  ingress:
    enabled: true
    annotations: 
      cert-manager.io/cluster-issuer: cert-manager-letsencrypt-production-cloudflare
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: nginx
      nginx.org/client-max-body-size: 10M
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - argocd.us-west-2.malaysia-ai.org
    tls:
    - hosts:
      - argocd.us-west-2.malaysia-ai.org
      secretName: argocd-secret # do not change, this is provided by Argo CD
    https: true
configs:
  cm:
    kustomize.buildOptions: --enable-helm
    url: https://argocd.us-west-2.malaysia-ai.org
    admin.enabled: false
    resource.customizations.actions.apps_Deployment: |
      discovery.lua: |
        actions = {}
        actions["restart"] = {}
        actions["turnOn"] = {["disabled"] = true}
        actions["turnOff"] = {["disabled"] = true}

        local replicas
        if obj.spec.replicas ~= nil then
            replicas = obj.spec.replicas
        end
        if replicas ~= 0 then
          actions["turnOff"]["disabled"] = false
        else
          actions["turnOn"]["disabled"] = false
        end
        return actions
      definitions:
        - name: turnOn
          action.lua: |
            obj.spec.replicas = 1
            return obj
        - name: turnOff
          action.lua: |
            obj.spec.replicas = 0
            return obj
        - name: restart
          action.lua: |
            local os = require("os")
            if obj.spec.template.metadata == nil then
              obj.spec.template.metadata = {}
            end
            if obj.spec.template.metadata.annotations == nil then
              obj.spec.template.metadata.annotations = {}
            end
            obj.spec.template.metadata.annotations["kubectl.kubernetes.io/restartedAt"] = os.date("!%Y-%m-%dT%XZ")
            return obj
    resource.customizations.actions.batch_CronJob: |
      discovery.lua: |
        actions = {}
        actions["suspend"] = {["disabled"] = true}
        actions["resume"] = {["disabled"] = true}

        local suspend = false
        if obj.spec.suspend ~= nil then
            suspend = obj.spec.suspend
        end
        if suspend then
            actions["resume"]["disabled"] = false
        else
            actions["suspend"]["disabled"] = false
        end
        return actions
      definitions:
      - name: suspend
        action.lua: |
          obj.spec.suspend = true
          return obj
      - name: resume
        action.lua: |
          if obj.spec.suspend ~= nil and obj.spec.suspend then
              obj.spec.suspend = false
          end
          return obj
    # oidc.config: |
    #   name: Auth0
    #   issuer: https://github-oauth2.us-west-2.malaysia-ai.org
    #   clientID: 249498ebddc89a2653a8
    #   clientSecret: 3d96f7b81a71e8629d8ec0accc6c2e8c75fda8f0
    #   requestedScopes:
    #     - openid
    #     - profile
    #     - email
    dex.config: |-
      logger:
        level: debug
        format: json
      connectors:
      - type: saml
        name: IAM Identity Center
        id: iam-identity-center
        config:
          ssoURL: https://portal.sso.us-east-1.amazonaws.com/saml/assertion/ODk2MjgwMDM0ODI5X2lucy0wOTlhYTRkMzI0NTRlODUw
          logoutURL: https://portal.sso.us-east-1.amazonaws.com/saml/logout/ODk2MjgwMDM0ODI5X2lucy0wOTlhYTRkMzI0NTRlODUw
          entityIssuer: https://argocd.us-west-2.malaysia-ai.org/api/dex/callback
          redirectURI: https://argocd.us-west-2.malaysia-ai.org/api/dex/callback
          usernameAttr: email
          emailAttr: email
          groupsAttr: group
          caData: |-
            LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lFTmRpMHF6QU5CZ2txaGtpRzl3MEJBUXNGQURCRk1SWXdGQVlEVlFRRERBMWgKYldGNmIyNWhkM011WTI5dE1RMHdDd1lEVlFRTERBUkpSRUZUTVE4d0RRWURWUVFLREFaQmJXRjZiMjR4Q3pBSgpCZ05WQkFZVEFsVlRNQjRYRFRJME1ERXlNakV5TURBeU4xb1hEVEkxTURFeU1qRXlNREF5TjFvd1JURVdNQlFHCkExVUVBd3dOWVcxaGVtOXVZWGR6TG1OdmJURU5NQXNHQTFVRUN3d0VTVVJCVXpFUE1BMEdBMVVFQ2d3R1FXMWgKZW05dU1Rc3dDUVlEVlFRR0V3SlZVekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQgpBS01ESENIOVp3MDZid0JBblIrWTNKaTNUUlQvZmdCYjhZN1UydWc1ZkpzREdINGh4SHRheTBhYmZ0SjFxN1dBCk1RUXBiM0cvdGw4U05Qc2RLYU1MOGRFWlRLMzhXOFFXeklmK2FmOHFOZ2NYUHY1eVl6ZnRNYmxUcVVlenl0RWgKSGxDM0hySEtWTko2Y2x4NEIzYksvMmJZak03SVpJME9FVGpZZE5wREVpaUlHOWRpWldBdXBJdGpHVUpvM3FxRAp6T2w3R0R5ZjJ0QkY4YUk5RC9DdE1SZm9uSXdaMlpwMmRvNHgrdFhZVUdtTXVIVmQxb1E2M1FvQlVoVCtwWTk3Ck5OWHZUcFk5R2JpNnNWd3FvSG5GNis2Z2UxZHFHRUdlUTV3cDZ3OWludlJDdWNtdkxsYTN1NzVEZUgrRjg4NVIKQVZFaHFFT3IzK1ZYYWtFcUNiMjZOOWNDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjcWUrbUtSdApFSWtaaWF2UnBZTGdQV09jbzdaSXdOOW40cCtrc25YS1FkNFVqaGppTlpZNGc4QTZQczVRYzlhdjFIempIdUYwCjRwcm9qSnRPWjBzZkVkRGRBcTNYZHZHVGE1VTJOd3FvUFo1K3Jidmxkck93dFJJSHVmR3ZIcGVoSGNXMWZlOC8KZkx0MXZuQWpTSUR6dnc2REpEckRORDFtT25UcWdnZGxGQTR3SjBod3ZWVGN6MXl5bTZkV3ZTVlVnbHFsZm9ncwpJVlYxNU5lUitjckJ5cTRxb25Yd28wRGxYakZZU2dTTldIK3JTRlliakNVUDBjMnV1UUhjMlJyRWJFTWpTWVVzCjd0blpBeHBsVFJPVXhSL1JFNGVWclZTajlLdjBHb1ZINnBhS0NDc2ZlejNPVDREYkNnNmZWaWc4alhZOWVzUDMKMnB2WkxrZW5pUnRzWUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  rbac:
    policy.csv: |
      p, role:readonly, applications, get, */*, allow
      p, role:readonly, certificates, get, *, allow
      p, role:readonly, clusters, get, *, allow
      p, role:readonly, repositories, get, *, allow
      p, role:readonly, projects, get, *, allow
      p, role:readonly, accounts, get, *, allow
      p, role:readonly, gpgkeys, get, *, allow

      p, role:admin, applications, create, */*, allow
      p, role:admin, applications, update, */*, allow
      p, role:admin, applications, delete, */*, allow
      p, role:admin, applications, sync, */*, allow
      p, role:admin, applications, override, */*, allow
      p, role:admin, applications, action/*, */*, allow
      p, role:admin, certificates, create, *, allow
      p, role:admin, certificates, update, *, allow
      p, role:admin, certificates, delete, *, allow
      p, role:admin, clusters, create, *, allow
      p, role:admin, clusters, update, *, allow
      p, role:admin, clusters, delete, *, allow
      p, role:admin, repositories, create, *, allow
      p, role:admin, repositories, update, *, allow
      p, role:admin, repositories, delete, *, allow
      p, role:admin, projects, create, *, allow
      p, role:admin, projects, update, *, allow
      p, role:admin, projects, delete, *, allow
      p, role:admin, accounts, update, *, allow
      p, role:admin, gpgkeys, create, *, allow
      p, role:admin, gpgkeys, delete, *, allow

      g, argocd-readonly, role:readonly
      g, argocd-admin, role:admin
      g, f438f408-40e1-703d-4dfa-e97bf8bc4806, role:admin
    policy.default: role:readonly
    scopes: '[groups]'
  credentialTemplates:
    https-creds:
      url: https://github.com/malaysia-ai
      username: argocd-user
      password: ${argocd_pan}
  repositories:
    argocd:
      url: https://github.com/malaysia-ai/argocd
    docker-registry:
      url: registry-1.docker.io
      username: "docker"
      password: ""
      name: docker-registry
      enableOCI: "true"
      type: "helm"